services:
  db:
    image: postgres:16
    container_name: postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - /opt/my_budget_data/postgres-data:/var/lib/postgresql/data   
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
  # This container ONLY does database setup, then exits
  db-migrate:
    build: .
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_USER}@db:5432/${DB_NAME}
    command: |
      sh -c "
        echo 'Running migrations...'
        alembic upgrade head
        echo 'Seeding data...'
        ls
        python seed_data.py
        echo 'Database setup complete!'
      "
    restart: "no"  

  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_USER}@db:5432/${DB_NAME}
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    depends_on:
      - db-migrate  

